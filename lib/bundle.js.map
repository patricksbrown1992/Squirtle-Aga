{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/beedrill.js","webpack:///./js/butterfree.js","webpack:///./js/canvas.js","webpack:///./js/dragonite.js","webpack:///./js/game.js","webpack:///./js/score.js","webpack:///./js/squirtleBullet.js","webpack:///./lib/squirtle-aga.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,yBAAyB;AAChD;AACA,2BAA2B,sBAAsB;AACjD,mCAAmC;AACnC;AACA;AACA;;AAEA;AACA,uBAAuB,2BAA2B;AAClD,2BAA2B,wBAAwB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,C;;;;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA,wBAAwB,2BAA2B;AACnD;AACA,2BAA2B,wBAAwB;AACnD,qCAAqC;AACrC;AACA;AACA;;AAEA;;AAEA,uBAAuB,2BAA2B;AAClD,2BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,C;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,C;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,0BAA0B;AACjD;AACA,2BAA2B,uBAAuB;AAClD,oCAAoC;AACpC;AACA;AACA;;AAEA;AACA,uBAAuB,0BAA0B;AACjD,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;;;;;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8B;AACoB;AACZ;AACN;AACQ;AACE;AACE;AACV;;AAElC;AACA;AACA;AACA,qBAAqB,iDAAM,cAAc,+CAAI,EAAE,yDAAc,EAAE,mDAAQ,EAAE,gDAAK,EAAE,oDAAS,EAAE,qDAAU,EAAE,sDAAW;;AAElH,CAAC,C","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib/squirtle-aga.js\");\n","class Beedrill{\n    constructor(x, y, health){\n        this.x = x;\n        this.y = y;\n        this.health = health;\n        this.height = 22;\n        this.width = 20;\n        this.beedrillPadding = 20;\n        this.beedrillOffsetLeft = 140;\n        this.beedrillOffsetTop = 100\n        this.beedrillRowCount = 2;\n        this.beedrillColumnCount = 8;\n        this.beedrills = [];\n    }\n    \n    beedrills(){\n        for (var c = 0; c < beedrillColumnCount; c++) {\n            beedrills[c] = [];\n            for (var r = 0; r < beedrillRowCount; r++) {\n                beedrills[c][r] = { x: 0, y: 0 };\n            }\n        }\n    }\n\n    drawBeedrills() {\n        for (var c = 0; c < butterfreeColumnCount; c++) {\n            for (var r = 0; r < butterfreeRowCount; r++) {\n                var beedrillX = (c * (beedrillWidth + beedrillPadding)) + beedrillOffsetLeft;\n                var beedrillY = (r * (beedrillHeight + beedrillPadding)) + beedrillOffsetTop;\n                beedrills[c][r].x = beedrillX;\n                beedrills[c][r].y = beedrillY;\n                ctx.beginPath();\n                ctx.rect(beedrillX, beedrillY, beedrillWidth, beedrillHeight);\n                ctx.fillStyle = \"green\";\n                ctx.fill();\n                ctx.closePath();\n            }\n        }\n    }\n\n\n}","class Butterfree{\n    constructor(x, y, health){\n        this.x = x;\n        this.y = y;\n        this.health = health;\n        this.height = 17;\n        this.width = 21;\n        this.butterfreePadding = 20;\n        this.butterfrees = [];\n        this.butterfreeRowCount = 2;\n        this.butterfreeColumnCount = 8;\n        this.butterfreeOffsetTop = 50;\n        this.butterfreeOffsetLeft = 138;\n        \n       \n    }\n\n    butterfrees(){\n         for (var c = 0; c < butterfreeColumnCount; c++) {\n            butterfrees[c] = [];\n            for (var r = 0; r < butterfreeRowCount; r++) {\n                butterfrees[c][r] = { x: 0, y: 0 };\n            }\n        }\n    }\n\n    drawButterfrees() {\n        \n        for (var c = 0; c < butterfreeColumnCount; c++) {\n            for (var r = 0; r < beedrillRowCount; r++) {\n                var butterfreeX = (c * (butterfreeWidth + butterfreePadding)) + butterfreeOffsetLeft;\n                var butterfreeY = (r * (butterfreeHeight + butterfreePadding)) + butterfreeOffsetTop;\n                butterfrees[c][r].x = butterfreeX;\n                butterfrees[c][r].y = butterfreeY;\n                ctx.beginPath();\n                ctx.rect(butterfreeX, butterfreeY, butterfreeWidth, butterfreeHeight);\n                ctx.fillStyle = \"#0095DD\";\n                ctx.fill();\n                ctx.closePath();\n            }\n        }\n    }\n\n\n}","class Canvas{\n    constructor(canvas, ctx, game, squirtleBullet, beedrill, score, dragonite, butterfree, enemyBullet){\n        this.canvas = canvas;\n        this.ctx = ctx;\n        this.game = game;\n        this.squirtleBullet = squirtleBullet;\n        this.beedrill = beedrill;\n        this.score = score;\n        this.dragonite = dragonite;\n        this.butterfree = butterfree;\n        this.enemyBullet = enemyBullet;\n    }\n\n    \n}","class Dragonite{\n    constructor(x, y, health){\n        this.x = x;\n        this.y = y;\n        this.health = health;\n        this.height = 31;\n        this.width = 24;\n        this.dragonitePadding = 40;\n        this.dragoniteRowCount = 1;\n        this.dragoniteColumnCount = 4;\n        this.dragoniteOffsetLeft = 170;\n        this.dragonites = [];\n    }\n    \n    dragonite(){\n        for (var c = 0; c < dragoniteColumnCount; c++) {\n            dragonites[c] = [];\n            for (var r = 0; r < dragoniteRowCount; r++) {\n                dragonites[c][r] = { x: 0, y: 0 };\n            }\n        }\n    }\n\n    drawDragonites() {\n        for (var c = 0; c < dragoniteColumnCount; c++) {\n            for (var r = 0; r < dragoniteRowCount; r++) {\n                var dragoniteX = (c * (dragoniteWidth + dragonitePadding)) + dragoniteOffsetLeft;\n                var dragoniteY = (r * (dragoniteHeight + dragonitePadding));\n                dragonites[c][r].x = dragoniteX;\n                dragonites[c][r].y = dragoniteY;\n                ctx.beginPath();\n                ctx.rect(dragoniteX, dragoniteY, dragoniteWidth, dragoniteHeight);\n                ctx.fillStyle = \"red\";\n                ctx.fill();\n                ctx.closePath();\n            }\n        }\n    }\n}","class Game{\n    constructor(){\n\n        this.audio = new Audio(\"assets/pokemon-trainer-battle-music.mp3\");\n        this.audio.loop = true;\n        this.audio.volume = .25;\n        this.auto.load();\n        var lives = 3;\n        \n    }\n\n}\n\n","class Score{\n    constructor(){\n        this.score = 0;\n    }\n\n    resetGame(){\n        this.score = 0;\n    }\n\n    addPoints(points){\n        this.score += points;\n    }\n}","class SquirtleBullet{\n    constructor(x,y, dy){\n        this.x = x;\n        this.y = y;\n        this.width = 12;\n        this.height = 25;\n        this.dy = dy;\n        this.speed = 25;\n        this.color = \"green\";\n    }\n}","import Game from '../js/game';\nimport SquirtleBullet from '../js/squirtleBullet';\nimport Beedrill from '../js/beedrill';\nimport Score from '../js/score';\nimport Dragonite from '../js/dragonite';\nimport Butterfree from '../js/butterfree';\nimport EnemyBullet from '../js/enemyBullet';\nimport Canvas from '../js/canvas';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const canvas = document.querySelector('canvas');\n    const ctx = canvas.getContext('2d');\n    const game = new Canvas(canvas, ctx, Game, SquirtleBullet, Beedrill, Score, Dragonite, Butterfree, EnemyBullet);\n\n})"],"sourceRoot":""}