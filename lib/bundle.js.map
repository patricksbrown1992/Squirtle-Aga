{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/beedrill.js","webpack:///./js/butterfree.js","webpack:///./js/dragonite.js","webpack:///./js/enemyBullet.js","webpack:///./js/game.js","webpack:///./js/score.js","webpack:///./js/squirtle.js","webpack:///./js/squirtleBullet.js","webpack:///./js/squirtleBulletShooter.js","webpack:///./lib/squirtle-aga.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8BAA8B;AACrD;AACA,2BAA2B,2BAA2B;AACtD,wCAAwC;AACxC;AACA;AACA;;;AAGA;AACA,uBAAuB,8BAA8B;AACrD,2BAA2B,2BAA2B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEe,uEAAQ,E;;;;;;;;;;;;AChDvB;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gCAAgC;AACvD;AACA,2BAA2B,6BAA6B;AACxD,0CAA0C;AAC1C;AACA;;AAEA;;;AAGA;AACA,uBAAuB,gCAAgC;AACvD,2BAA2B,6BAA6B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEe,yEAAU,E;;;;;;;;;;;;ACjDzB;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+BAA+B;AACtD;AACA,2BAA2B,4BAA4B;AACvD,yCAAyC;AACzC;AACA;AACA;;;AAGA;AACA,uBAAuB,+BAA+B;AACtD,2BAA2B,4BAA4B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEe,wEAAS,E;;;;;;;;;;;;AC7CxB;AAAA;AAAA;AAAA;AAAsC;AACJ;AACE;;AAEpC;AACA;AACA;AACA;AACA,qC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEe,0EAAW,E;;;;;;;;;;;;AC/B1B;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACe,mEAAI,EAAC;;;;;;;;;;;;;ACvCpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wB;;;;;;;;;;;;ACdA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACe,uEAAQ,EAAC;;;;;;;;;;;;;ACvExB;AAAA;AAAkC;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEe,6EAAc,E;;;;;;;;;;;;ACjC7B;AAAA;AAA8C;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC,uDAAc;AAChD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEe,oFAAqB,E;;;;;;;;;;;;AC/BpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8B;AACoB;AACZ;AACN;AACQ;AACE;AACE;AACN;AAC0B;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gDAAI,cAAc,oDAAQ,EAAE,sDAAU,EAAE,oDAAQ,EAAE,qDAAS;;AAEhF;AACA;;AAEA,sBAAsB,eAAe;;AAErC,CAAC,C","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib/squirtle-aga.js\");\n","class Beedrill{\n    constructor(canvas, ctx){\n     \n        this.health = 1;\n        this.height = 22;\n        this.width = 20;\n        this.canvas = canvas;\n        this.ctx = ctx;\n        this.beedrillPadding = 20;\n        this.beedrillOffsetLeft = 140;\n        this.beedrillOffsetTop = 100\n        this.beedrillRowCount = 2;\n        this.beedrillColumnCount = 8;\n        this.drawBeedrills = this.drawBeedrills.bind(this);\n        this.draw = this.draw.bind(this);\n        this.beedrills = [];\n        for (var c = 0; c < this.beedrillColumnCount; c++) {\n            this.beedrills[c] = [];\n            for (var r = 0; r < this.beedrillRowCount; r++) {\n                this.beedrills[c][r] = { x: 0, y: 0 };\n            }\n        }\n    }\n  \n\n    drawBeedrills() {\n        for (var c = 0; c < this.beedrillColumnCount; c++) {\n            for (var r = 0; r < this.beedrillRowCount; r++) {\n                var beedrillX = (c * (this.width + this.beedrillPadding)) + this.beedrillOffsetLeft;\n                var beedrillY = (r * (this.height + this.beedrillPadding)) + this.beedrillOffsetTop;\n                this.beedrills[c][r].x = beedrillX;\n                this.beedrills[c][r].y = beedrillY;\n                ctx.beginPath();\n                ctx.rect(beedrillX, beedrillY, this.width, this.height);\n                ctx.fillStyle = \"green\";\n                ctx.fill();\n                ctx.closePath();\n            }\n        }\n    }\n\n    draw(){\n        this.drawBeedrills();\n    }\n\n\n}\n\nexport default Beedrill;","class Butterfree{\n    constructor(canvas, ctx, butterfreePhoto){\n        this.butterfreePhoto = butterfreePhoto;\n        this.health = 1;\n        this.height = 17;\n        this.width = 21;\n        this.canvas = canvas;\n        this.ctx = ctx;\n        this.butterfreePadding = 20;\n        this.butterfrees = [];\n        this.butterfreeRowCount = 2;\n        this.butterfreeColumnCount = 8;\n        this.butterfreeOffsetTop = 50;\n        this.butterfreeOffsetLeft = 138;\n        this.drawButterfrees = this.drawButterfrees.bind(this);\n        this.draw = this.draw.bind(this);\n        for (var c = 0; c < this.butterfreeColumnCount; c++) {\n            this.butterfrees[c] = [];\n            for (var r = 0; r < this.butterfreeRowCount; r++) {\n                this.butterfrees[c][r] = { x: 0, y: 0 };\n            }\n        }\n       \n    }\n\n\n    drawButterfrees() {\n        for (var c = 0; c < this.butterfreeColumnCount; c++) {\n            for (var r = 0; r < this.butterfreeRowCount; r++) {\n                var butterfreeX = (c * (this.width + this.butterfreePadding)) + this.butterfreeOffsetLeft;\n                var butterfreeY = (r * (this.height + this.butterfreePadding)) + this.butterfreeOffsetTop;\n                this.butterfrees[c][r].x = butterfreeX;\n                this.butterfrees[c][r].y = butterfreeY;\n                ctx.beginPath();\n                ctx.rect(butterfreeX, butterfreeY, this.width, this.height);\n                ctx.fillStyle = \"#0095DD\";\n                ctx.fill();\n                ctx.closePath();\n            }\n        }\n    }\n\n    draw(){\n        this.drawButterfrees();\n    }\n\n\n}\n\nexport default Butterfree;","class Dragonite{\n    constructor(canvas, ctx){\n        // this.dragonitePhoto = dragonitePhoto;\n        this.health = 2;\n        this.height = 31;\n        this.width = 24;\n        this.canvas = canvas;\n        this.ctx = ctx;\n        this.dragonitePadding = 40;\n        this.dragoniteRowCount = 1;\n        this.drawDragonites = this.drawDragonites.bind(this);\n        this.draw = this.draw.bind(this);\n        this.dragoniteColumnCount = 4;\n        this.dragoniteOffsetLeft = 170;\n        this.dragonites = [];\n        for (var c = 0; c < this.dragoniteColumnCount; c++) {\n            this.dragonites[c] = [];\n            for (var r = 0; r < this.dragoniteRowCount; r++) {\n                this.dragonites[c][r] = { x: 0, y: 0 };\n            }\n        }\n    }\n    \n\n    drawDragonites() {\n        for (var c = 0; c < this.dragoniteColumnCount; c++) {\n            for (var r = 0; r < this.dragoniteRowCount; r++) {\n                var dragoniteX = (c * (this.width + this.dragonitePadding)) + this.dragoniteOffsetLeft;\n                var dragoniteY = (r * (this.height + this.dragonitePadding));\n                this.dragonites[c][r].x = dragoniteX;\n                this.dragonites[c][r].y = dragoniteY;\n                ctx.beginPath();\n                ctx.rect(dragoniteX, dragoniteY, this.width, this.height);\n                ctx.fillStyle = \"red\";\n                ctx.fill();\n                ctx.closePath();\n            }\n        }\n    }\n\n    draw(){\n        this.drawDragonites()\n    }\n}\n\nexport default Dragonite;","import ButterFree from './butterfree';\nimport Beedrill from './beedrill';\nimport Dragonite from './dragonite';\n\nclass EnemyBullet{\n    constructor(canvas, ctx, ButterFree, Beedrill, Dragonite){\n        this.canvas = canvas;\n        this.ctx = ctx;\n        this.ButterFree = ButterFree; \n        this.Beedrill = Beedrill;\n        this.Dragonite = Dragonite;\n        this.eBulletWidth = 3;\n        this.eBulletHeight = 25;\n        this.eBulletHealth = 1;\n        this.draw = this.draw.bind(this);\n        this.drawEnemyBullet = this.drawEnemyBullet.bind(this);\n        this.Enemies = [];\n        // Loop through all three to get enemies\n        this.speed = 3;\n    }\n\n    drawEnemyBullet(){\n\n    }\n\n    draw(){\n        this.drawEnemyBullet();\n        this.y += this.speed;\n    }\n}\n\nexport default EnemyBullet;","class Game{\n    constructor(canvas, ctx, Squirtle, Butterfree, BeeDrill, Dragonite\n        // squirtlePhoto, Butterfree, butterfreePhoto, Beedrill, beedrillPhoto, Dragonite, dragonitePhoto, SquirtleBulletShooter ){\n        ){\n        this.canvas = canvas;\n        this.ctx = ctx;\n        // this.squirtlePhoto = squirtlePhoto;\n        // this.butterfreePhoto = butterfreePhoto;\n        // this.beedrillPhoto = beedrillPhoto;\n        // this.dragonitePhoto = dragonitePhoto;\n        this.Squirtle = new Squirtle(canvas, ctx);\n        this.Butterfree = new Butterfree(canvas, ctx);\n        this.BeeDrill = new BeeDrill(canvas, ctx);\n\n        // this.Butterfree = new Butterfree(canvas, ctx, this.butterfreePhoto);\n        // this.Beedrill = new Beedrill(canvas, ctx, this.beedrillPhoto);\n        this.Dragonite = new Dragonite(canvas, ctx);\n        // this.SquirtleBulletShooter = new SquirtleBulletShooter(ctx, canvas, this.Squirtle);\n        this.lives = 3;\n        this.begin = this.begin.bind(this);\n\n        // document.addEventListener(\"keydown\", this.Squirtle.keyDownHandler, false);\n        // document.addEventListener(\"keyup\", this.Squirtle.keyUpHandler, false);\n        // document.addEventListener(\"keydown\", this.SquirtleBulletShooter.keyDownHandler, false);\n    }\n\n    start(){\n\n    }\n\n    begin(){\n        // debugger\n        this.Squirtle.draw();\n        this.Butterfree.draw();\n        this.BeeDrill.draw();\n        this.Dragonite.draw();\n    }\n\n    \n}\nexport default Game;\n","\nclass Score {\n    constructor(canvas, ctx){\n        this.canvas = canvas;\n        this.ctx = ctx;\n        this.score = 0;\n    }\n//     resetGame(){\n//         this.score = 0;\n//     }\n//     addPoints(points){\n//         this.score += points;\n//     }\n}\n// export default Score;","class Squirtle{\n    constructor(canvas, ctx){\n        this.squirtleWidth = 24;\n        // this.squirtlePhoto = squirtlePhoto;\n        this.squirtleHeight = 31;\n        this.canvas = canvas;\n        this.squirtleX = (this.canvas.width - this.squirtleWidth) / 2;\n        this.rightPressed = false;\n        this.leftPressed = false;\n        this.ctx = ctx;\n        this.spacePressed = false;\n        // this.bullets = [];\n        this.squirtleSpeed = 3\n        this.keyDownHandler = this.keyDownHandler.bind(this);\n        this.keyUpHandler = this.keyUpHandler.bind(this);\n        this.drawSquirtle = this.drawSquirtle.bind(this);\n        this.draw = this.draw.bind(this);\n    }\n\n\n        keyDownHandler(e) {\n            debugger\n        if (e.keyCode === 39) {\n\n            this.rightPressed = true;\n        }\n        else if (e.keyCode === 37) {\n\n            this.leftPressed = true;\n        }\n      \n    }\n\n    \n    keyUpHandler(e) {\n        if (e.keyCode === 39) {\n\n            this.rightPressed = false;\n\n        }\n        else if (e.keyCode === 37) {\n\n            this.leftPressed = false;\n        }\n       \n    }\n\n    \n\n    drawSquirtle() {\n        // debugger\n        this.ctx.beginPath();\n        this.ctx.rect(this.squirtleX, this.canvas.height - this.squirtleHeight, this.squirtleHeight, this.squirtleWidth);\n        this.ctx.fillStyle = \"orange\";\n        this.ctx.fill();\n        this.ctx.closePath();\n        // this.ctx.drawSquirtle(this.squirtleX, this.canvas-height - this.squirtleHeight, this.squirtleHeight, this.squirtleWidth)\n    }\n\n    draw() {\n        this.drawSquirtle();\n        // this.ctx.fillText(\"GAME OVER\", this.canvas.width / 2, 100);\n        if (this.rightPressed && this.squirtleX < this.canvas.width - this.squirtleWidth) {\n            squirtleX += this.squirtleSpeed;\n        } else if (this.leftPressed && this.squirtleX > 0) {\n            squirtleX -= this.squirtleSpeed;\n       \n        }\n    }\n    \n}\nexport default Squirtle;\n","import Squirtle from './squirtle';\n\nclass SquirtleBullet{\n    constructor(canvas, ctx, Squirtle){\n        this.Squirtle = Squirtle;\n        this.sBulletWidth = 3;\n        this.sBulletHeight = 25;\n        this.canvas = canvas;\n        this.ctx = ctx;\n        this.sBulletHealth = 1;\n        this.draw = this.draw.bind(this);\n        this.drawSquirtleBullet = this.drawSquirtleBullet.bind(this);\n        this.x = Squirtle.squirtleX;\n        this.y = this.Squirtle.y - 10;\n        this.speed = 3;\n    }\n\n    drawSquirtleBullet(){\n        this.ctx.beginPath();\n        this.ctx.rect(this.x, this.y, this.sBulletWidth, this.sBulletHeight);\n        this.ctx.fillStyle = \"blue\";\n        this.ctx.fill();\n        this.ctx.closePath();\n    }\n\n    draw(){\n        this.drawSquirtleBullet();\n        this.y -= this.speed;\n    }\n\n\n}\n\nexport default SquirtleBullet;","import SquirtleBullet from './squirtleBullet';\n\nclass SquirtleBulletShooter{\n    constructor(ctx, canvas, Squirtle, enemy){\n        this.Squirtle = Squirtle;\n        this.canvas = canvas;\n        this.ctx = ctx;\n        this.enemy = enemy;\n        this.keyDownHandler = this.keyDownHandler.bind(this);\n        this.collisionDetection = this.collisionDetection.bind(this);\n        this.bullets = [];\n    }\n\n    keyDownHandler(e){\n        if (e.keyDownHandler === 32){\n            this.bullets.push(new SquirtleBullet(this.canvas, this.ctx, this.Squirtle))\n        }\n    }\n\n    collisionDetection(){\n        this.bullets.forEach((bullet) => {\n            let bulletX = Math.floor(bullet.x);\n         \n            if (bulletX > this.Squirtle.squirtleX ){\n                this.enemy.status -= 1;\n                sBulletHealth.health = 0;\n            }\n        })\n    }\n}\n\nexport default SquirtleBulletShooter;","import Game from '../js/game';\nimport SquirtleBullet from '../js/squirtleBullet';\nimport Beedrill from '../js/beedrill';\nimport Score from '../js/score';\nimport Dragonite from '../js/dragonite';\nimport Butterfree from '../js/butterfree';\nimport EnemyBullet from '../js/enemyBullet';\nimport Squirtle from '../js/squirtle';\nimport SquirtleBulletShooter from '../js/squirtleBulletShooter';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    // const squirtlePhoto = new Image();\n    // squirtlePhoto.src = './assets/squirtle.png';\n    // const beedrillPhoto = new Image();\n    // beedrillPhoto.src = './assets/beedrill.png';\n    // const butterfreePhoto = new Image();\n    // butterfreePhoto.src = './assets/butterfree.png';\n    // const dragonitePhoto = new Image();\n    // dragonitePhoto.src = './assets/dragonite.png';\n    const canvas = document.querySelector('canvas');\n    const ctx = canvas.getContext('2d');\n    const game = new Game(canvas, ctx, Squirtle, Butterfree, Beedrill, Dragonite\n\n        // , squirtlePhoto, Butterfree, butterfreePhoto, Beedrill, beedrillPhoto, Dragonite, dragonitePhoto, SquirtleBulletShooter)\n    )\n\n    setTimeout(() => { game.begin() }, 1000)\n \n})"],"sourceRoot":""}