{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/beedrill.js","webpack:///./js/butterfree.js","webpack:///./js/dragonite.js","webpack:///./js/enemyBullet.js","webpack:///./js/enemyBulletShooter.js","webpack:///./js/game.js","webpack:///./js/score.js","webpack:///./js/squirtle.js","webpack:///./js/squirtleBullet.js","webpack:///./js/squirtleBulletShooter.js","webpack:///./lib/squirtle-aga.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8BAA8B;AACrD;AACA,2BAA2B,2BAA2B;AACtD,wCAAwC;AACxC;AACA;AACA;;;AAGA;AACA,uBAAuB,8BAA8B;AACrD,2BAA2B,2BAA2B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEe,uEAAQ,E;;;;;;;;;;;;AChDvB;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gCAAgC;AACvD;AACA,2BAA2B,6BAA6B;AACxD,0CAA0C;AAC1C;AACA;;AAEA;;;AAGA;;AAEA,uBAAuB,gCAAgC;AACvD,2BAA2B,6BAA6B;AACxD;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEe,yEAAU,E;;;;;;;;;;;;ACpDzB;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+BAA+B;AACtD;AACA,2BAA2B,4BAA4B;AACvD,yCAAyC;AACzC;AACA;AACA;;;AAGA;AACA,uBAAuB,+BAA+B;AACtD,2BAA2B,4BAA4B;AACvD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEe,wEAAS,E;;;;;;;;;;;;AC/CxB;AAAA;AAAA;AAAsC;AACJ;;;AAGlC;AACA;AACA;AACA;AACA,0BAA0B,mDAAU,C;AACpC,wBAAwB,iDAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe,0EAAW,E;;;;;;;;;;;;ACnC1B;AAAA;AAAwC;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,kCAAkC,oDAAW;AAC7C;;AAEA;AACA;AACA;AACA;;AAEA,kCAAkC,oDAAW;AAC7C;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEe,iFAAkB,E;;;;;;;;;;;;AC5DjC;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAIA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA;;;AAGA;AACA;AACA,qBAAqB;AACrB;AACA;;;AAGA;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;;AAIA;AACe,mEAAI,EAAC;;;;;;;;;;;;;;;AC3RpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,qBAAqB;AAC1D,qCAAqC,oBAAoB;;AAEzD;AACA;AACe,oEAAK,E;;;;;;;;;;;;AC3BpB;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,+B;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,S;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;;;;AAKA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA,S;;;AAGA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACe,uEAAQ,EAAC;;;;;;;;;;;;;AC/ExB;AAAA;AAAkC;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEe,6EAAc,E;;;;;;;;;;;;ACrC7B;AAAA;AAA8C;;AAE9C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA,kCAAkC,uDAAc;;AAEhD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kCAAkC,OAAO;AACzC,sCAAsC,OAAO;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kCAAkC,OAAO;AACzC,sCAAsC,OAAO;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;AAQA;AACA,aAAa;AACb;AACA;AACA;;AAEe,oFAAqB,E;;;;;;;;;;;;AC5EpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8B;AACoB;;AAEV;AACE;AACJ;AACM;AACN;AAC0B;;AAEN;AAC1B;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gDAAI,cAAc,oDAAQ,iBAAiB,sDAAU,mBAAmB,oDAAQ,iBAAiB,iEAAqB,EAAE,8DAAkB,+CAA+C,iDAAK;AACnN;AACA;AACA,CAAC,C","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib/squirtle-aga.js\");\n","class Beedrill{\n    constructor(canvas, ctx,beedrillPhoto){\n        this.beedrillPhoto = beedrillPhoto;\n        this.height = 22;\n        this.width = 20;\n        this.canvas = canvas;\n        this.ctx = ctx;\n        this.beedrillPaddingBetween = 50;\n        this.beedrillPaddingTop = 25;\n        this.beedrillOffsetLeft = 100;\n        this.beedrillOffsetTop = 130\n        this.beedrillRowCount = 2;\n        this.beedrillColumnCount = 5;\n        this.drawBeedrills = this.drawBeedrills.bind(this);\n        this.draw = this.draw.bind(this);\n        this.beedrills = [];\n        for (var c = 0; c < this.beedrillColumnCount; c++) {\n            this.beedrills[c] = [];\n            for (var r = 0; r < this.beedrillRowCount; r++) {\n                this.beedrills[c][r] = { x: 0, y: 0, health: 1 };\n            }\n        }\n    }\n  \n\n    drawBeedrills() {\n        for (var c = 0; c < this.beedrillColumnCount; c++) {\n            for (var r = 0; r < this.beedrillRowCount; r++) {\n                if (this.beedrills[c][r].health > 0) {\n                    var beedrillX = (c * (this.width + this.beedrillPaddingBetween)) + this.beedrillOffsetLeft;\n                    var beedrillY = (r * (this.height + this.beedrillPaddingTop)) + this.beedrillOffsetTop;\n                    this.beedrills[c][r].x = beedrillX;\n                    this.beedrills[c][r].y = beedrillY;\n                    this.ctx.drawImage(this.beedrillPhoto, 0, 0, 70, 70, beedrillX, beedrillY, 50, 50)\n                }\n \n               \n            }\n        }\n    }\n\n    draw(){\n        this.drawBeedrills();\n    }\n\n\n}\n\nexport default Beedrill;","class Butterfree{\n    constructor(canvas, ctx, butterfreePhoto){\n        this.butterfreePhoto = butterfreePhoto;\n        this.height = 17;\n        this.width = 21;\n        this.canvas = canvas;\n        this.ctx = ctx;\n        this.butterfreePaddingBetween = 50;\n        this.butterfreePaddingTop = 27;\n        this.butterfrees = [];\n        this.butterfreeRowCount = 2;\n        this.butterfreeColumnCount = 6;\n        this.butterfreeOffsetTop = 20;\n        this.butterfreeOffsetLeft = 75;\n        this.drawButterfrees = this.drawButterfrees.bind(this);\n        this.draw = this.draw.bind(this);\n        for (var c = 0; c < this.butterfreeColumnCount; c++) {\n            this.butterfrees[c] = [];\n            for (var r = 0; r < this.butterfreeRowCount; r++) {\n                this.butterfrees[c][r] = { x: 0, y: 0, health: 1};\n            }\n        }\n       \n    }\n\n\n    drawButterfrees() {\n\n        for (var c = 0; c < this.butterfreeColumnCount; c++) {\n            for (var r = 0; r < this.butterfreeRowCount; r++) {\n                if (this.butterfrees[c][r].health > 0){\n\n                    var butterfreeX = (c * (this.width + this.butterfreePaddingBetween)) + this.butterfreeOffsetLeft;\n                    var butterfreeY = (r * (this.height + this.butterfreePaddingTop)) + this.butterfreeOffsetTop;\n                    this.butterfrees[c][r].x = butterfreeX;\n                    this.butterfrees[c][r].y = butterfreeY;\n                    this.ctx.drawImage(this.butterfreePhoto, 0, 0, 70, 70, butterfreeX, butterfreeY, 50, 50)\n                    \n\n                }\n\n            }\n        }\n    }\n\n    draw(){\n        this.drawButterfrees();\n    }\n\n\n}\n\nexport default Butterfree;","class Dragonite{\n    constructor(canvas, ctx, dragonitePhoto){\n        this.dragonitePhoto = dragonitePhoto;\n        this.health = 2;\n        this.height = 31;\n        this.width = 24;\n        this.canvas = canvas;\n        this.ctx = ctx;\n        this.dragonitePadding = 40;\n        this.dragoniteRowCount = 1;\n        this.drawDragonites = this.drawDragonites.bind(this);\n        this.draw = this.draw.bind(this);\n        this.dragoniteColumnCount = 4;\n        this.dragoniteOffsetLeft = 135;\n        this.dragonites = [];\n        for (var c = 0; c < this.dragoniteColumnCount; c++) {\n            this.dragonites[c] = [];\n            for (var r = 0; r < this.dragoniteRowCount; r++) {\n                this.dragonites[c][r] = { x: 0, y: 0 };\n            }\n        }\n    }\n    \n\n    drawDragonites() {\n        for (var c = 0; c < this.dragoniteColumnCount; c++) {\n            for (var r = 0; r < this.dragoniteRowCount; r++) {\n                var dragoniteX = (c * (this.width + this.dragonitePadding)) + this.dragoniteOffsetLeft;\n                var dragoniteY = (r * (this.height + this.dragonitePadding));\n                this.dragonites[c][r].x = dragoniteX;\n                this.dragonites[c][r].y = dragoniteY;\n                // ctx.beginPath();\n                this.ctx.drawImage(this.dragonitePhoto, 0, 0, 50, 50, dragoniteX, dragoniteY, 50, 50)\n\n                // ctx.rect(dragoniteX, dragoniteY, this.width, this.height);\n                // ctx.fillStyle = \"red\";\n                // ctx.fill();\n                // ctx.closePath();\n            }\n        }\n    }\n\n    draw(){\n        this.drawDragonites()\n    }\n}\n\nexport default Dragonite;","import ButterFree from './butterfree';\nimport Beedrill from './beedrill';\n\n\nclass EnemyBullet{\n    constructor(canvas, ctx, x, y){\n        this.canvas = canvas;\n        this.ctx = ctx;\n        this.ButterFree = ButterFree; \n        this.Beedrill = Beedrill;\n        this.eBulletWidth = 3;\n        this.eBulletHeight = 25;\n        this.health = 1;\n        this.draw = this.draw.bind(this);\n        this.drawEnemyBullet = this.drawEnemyBullet.bind(this);\n        this.speed = 3;\n        this.y = y;\n        this.x = x;\n        \n    }\n\n    drawEnemyBullet(){\n        this.ctx.beginPath();\n        this.ctx.rect(this.x, this.y, this.eBulletWidth, this.eBulletHeight);\n        this.ctx.fillStyle = \"green\";\n        this.ctx.fill();\n        this.ctx.closePath();\n    }\n\n    draw(){\n        this.drawEnemyBullet();\n        this.y += this.speed;\n    }\n}\n\nexport default EnemyBullet;","import EnemyBullet from './enemyBullet';\n\nclass EnemyBulletShooter {\n    constructor(ctx, canvas, Beedrill, Butterfree, Squirtle, musicObject) {\n        this.Squirtle = Squirtle;\n        this.Beedrill = Beedrill;\n        this.Butterfree = Butterfree;\n        this.musicObject = musicObject;\n        this.canvas = canvas;\n        this.ctx = ctx;\n        this.collisionDetection = this.collisionDetection.bind(this);\n        this.bullets = [];\n        this.shooterCheck = this.shooterCheck.bind(this);\n        this.gameOver = false;\n\n    }\n\n    shooterCheck(){\n        let i = Math.floor(Math.random() * this.Butterfree.butterfreeColumnCount);\n        let j = Math.floor(Math.random() * 2);\n        let k = this.Butterfree.butterfrees[i][j];\n        let num = Math.floor(Math.random() * 30);\n\n        if (k.health > 0 && num == 5){\n\n            this.bullets.push(new EnemyBullet(this.canvas, this.ctx, k.x + 15, k.y + 17))\n        }\n\n        let l = Math.floor(Math.random() * this.Beedrill.beedrillColumnCount);\n        let m = Math.floor(Math.random() * 2);\n        let n = this.Beedrill.beedrills[l][m];\n        if (n.health > 0 && num == 7) {\n  \n            this.bullets.push(new EnemyBullet(this.canvas, this.ctx, n.x + 15, n.y))\n        }\n     \n    };\n\n    collisionDetection() {\n\n        if (this.bullets.length > 0) {\n            this.bullets.forEach((bullet) => {\n                if(bullet.health > 0){\n      \n                    if (Math.floor(bullet.x) > this.Squirtle.squirtleX && Math.floor(bullet.x) < this.Squirtle.squirtleX + 25 && bullet.y > 475) {\n                        bullet.health -=1;\n                        this.Squirtle.health -=1;\n                        if (this.Squirtle.mutePressed){\n                            this.musicObject.hit.pause();\n                        } else {\n                            this.musicObject.hit.play();\n                        }\n                   \n                    }\n                }\n            })\n        }\n    }\n}\n\nexport default EnemyBulletShooter;","const STATUS = {\n    PLAYING: 0,\n    GAMEOVER: 1,\n    MENU: 2,\n    PAUSED: 3,\n    WIN: 4\n}\n\nclass Game{\n    constructor(canvas, ctx, Squirtle, squirtlePhoto, Butterfree, butterfreePhoto, Beedrill, beedrillPhoto, SquirtleBulletShooter, EnemyBulletShooter, gameOverPhoto, dealWithItPhoto, musicObject, Score){\n        this.canvas = canvas;\n        this.ctx = ctx;\n        this.squirtlePhoto = squirtlePhoto;\n        this.musicObject = musicObject;\n        this.state = STATUS.MENU;\n        this.gameOverPhoto = gameOverPhoto;\n        this.butterfreePhoto = butterfreePhoto;\n        this.beedrillPhoto = beedrillPhoto;\n        this.dealWithItPhoto = dealWithItPhoto;\n        this.Squirtle = new Squirtle(this.canvas, this.ctx, this.squirtlePhoto);\n        this.Butterfree = new Butterfree(this.canvas, this.ctx, this.butterfreePhoto);\n        this.Beedrill = new Beedrill(this.canvas, this.ctx, this.beedrillPhoto);\n        this.SquirtleBulletShooter = new SquirtleBulletShooter(this.ctx, this.canvas, this.Squirtle, this.Butterfree, this.Beedrill, this.musicObject);\n        this.EnemyBulletShooter = new EnemyBulletShooter(this.ctx, this.canvas, this.Beedrill, this.Butterfree, this.Squirtle, this.musicObject);\n        this.gameOver = false;\n        this.begin = this.begin.bind(this);\n        this.life = this.life.bind(this);\n        this.keyHandler = this.keyHandler.bind(this);\n        this.drawPause = this.drawPause.bind(this);\n        document.addEventListener(\"keydown\", this.Squirtle.keyDownHandler, false);\n        document.addEventListener(\"keyup\", this.Squirtle.keyUpHandler, false);\n        document.addEventListener(\"keydown\", this.SquirtleBulletShooter.keyDownHandler, false);\n        document.addEventListener('keypress', this.Squirtle.handleMute, false)\n        document.addEventListener(\"keyup\", this.keyHandler, false);\n        this.menuDraw = this.menuDraw.bind(this);\n        this.fainted = this.fainted.bind(this);\n        this.drawWin = this.drawWin.bind(this);\n        this.newSquirtle = Squirtle;\n        this.newBeedrill = Beedrill;\n        this.newButterfree = Butterfree;\n        this.newSquirtleBulletShooter = SquirtleBulletShooter;\n        this.newEnemyBulletShooter = EnemyBulletShooter;\n        this.newScore = Score\n        this.score = new Score(this.canvas, this.ctx, this.Squirtle);\n\n        // document.addEventListener('keypress', this.Squirtle.handlePause, false)\n    }\n\n    start(){\n\n    }\n\n    keyHandler(e){\n \n        if (e.keyCode === 80){\n\n            if (this.state !== STATUS.PAUSED) {\n \n                this.drawPause()\n                this.state = STATUS.PAUSED\n            } else {\n\n                this.state = STATUS.PLAYING\n                this.life()\n            }\n            \n        }\n\n         if (e.keyCode === 13) {\n             if (this.state !== STATUS.PLAYING) {\n\n                 this.state = STATUS.PLAYING\n                 this.life()\n             }\n\n         }\n\n        if (e.keyCode === 72 && this.state == STATUS.GAMEOVER) {\n            this.Squirtle = new this.newSquirtle(this.canvas, this.ctx, this.squirtlePhoto);\n            this.Beedrill = new this.newBeedrill(this.canvas, this.ctx, this.beedrillPhoto);\n            this.Butterfree = new this.newButterfree(this.canvas, this.ctx, this.butterfreePhoto);\n            this.SquirtleBulletShooter = new this.newSquirtleBulletShooter(this.ctx, this.canvas, this.Squirtle, this.Butterfree, this.Beedrill, this.musicObject);\n            this.EnemyBulletShooter = new this.newEnemyBulletShooter(this.ctx, this.canvas, this.Beedrill, this.Butterfree, this.Squirtle, this.musicObject);\n            this.score = new this.newScore(this.canvas, this.ctx, this.Squirtle);\n\n\n             document.addEventListener(\"keydown\", this.Squirtle.keyDownHandler, false);\n             document.addEventListener(\"keyup\", this.Squirtle.keyUpHandler, false);\n             document.addEventListener(\"keydown\", this.SquirtleBulletShooter.keyDownHandler, false);\n             document.addEventListener('keypress', this.Squirtle.handleMute, false)\n             document.addEventListener(\"keyup\", this.keyHandler, false);\n             this.state = STATUS.MENU\n             this.menuDraw();\n             \n         }\n         if (e.keyCode === 82 && this.state == STATUS.WIN) {\n             this.Squirtle = new this.newSquirtle(this.canvas, this.ctx, this.squirtlePhoto);\n             this.Beedrill = new this.newBeedrill(this.canvas, this.ctx, this.beedrillPhoto);\n             this.Butterfree = new this.newButterfree(this.canvas, this.ctx, this.butterfreePhoto);\n             this.SquirtleBulletShooter = new this.newSquirtleBulletShooter(this.ctx, this.canvas, this.Squirtle, this.Butterfree, this.Beedrill, this.musicObject);\n             this.EnemyBulletShooter = new this.newEnemyBulletShooter(this.ctx, this.canvas, this.Beedrill, this.Butterfree, this.Squirtle, this.musicObject);\n\n\n             document.addEventListener(\"keydown\", this.Squirtle.keyDownHandler, false);\n             document.addEventListener(\"keyup\", this.Squirtle.keyUpHandler, false);\n             document.addEventListener(\"keydown\", this.SquirtleBulletShooter.keyDownHandler, false);\n             document.addEventListener('keypress', this.Squirtle.handleMute, false)\n             document.addEventListener(\"keyup\", this.keyHandler, false);\n             this.state = STATUS.MENU\n             this.menuDraw();\n\n         }\n\n    }\n\n    drawPause(){\n        this.ctx.fillStyle = \"rgba(0, 0, 0, 0.5)\";\n        this.ctx.rect(0, 0, this.canvas.width, this.canvas.height);\n        this.ctx.fill();\n        this.ctx.fillStyle = \"white\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.font = \"50px Arial\";\n        this.ctx.fillText(\"Squirtle's Resting\", this.canvas.width / 2, this.canvas.height / 3);\n    }\n\n    life(){\n\n        if (this.state == STATUS.PAUSED || this.state == STATUS.MENU || this.state == STATUS.GAMEOVER || this.state == STATUS.WIN) {\n\n            return\n        \n        } else {\n\n            if(this.Squirtle.health <= 0){\n\n                if (!this.Squirtle.mutePressed){\n                    this.musicObject.music.pause();\n                    this.musicObject.heal.play();\n                }\n                this.state = STATUS.GAMEOVER\n                this.fainted()\n                \n            } else {\n                // this.Squirtle.draw();\n                // this.Butterfree.draw();\n                // this.Beedrill.draw();\n                if (!this.Squirtle.mutePressed) {\n                    this.musicObject.music.play();\n                } else {\n                    this.musicObject.music.pause();\n                }\n                let count = 0;\n                this.Beedrill.beedrills.forEach( (beedrill) => {\n                    if(beedrill[0].health > 0){\n                        count += 1 ;\n                    }\n                    if (beedrill[1].health > 0) {\n                        count += 1;\n                    }\n                })\n        \n                this.Butterfree.butterfrees.forEach( (butterfree) => {\n                \n                    if(butterfree[0].health > 0){\n                        count += 1;\n                    }\n                    if (butterfree[1].health > 0) {\n                        count += 1;\n                    }\n                }) \n              \n                if( count == 0){\n           \n                    if (!this.Squirtle.mutePressed) {\n                        this.musicObject.music.pause();\n                        this.musicObject.victory.play();\n                    }\n                    this.state = STATUS.WIN;\n                    this.drawWin()\n                    \n                    \n                    \n                } else {\n        \n                    requestAnimationFrame(this.life)\n                    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n                    this.Squirtle.draw();\n                    this.Butterfree.draw();\n                    this.Beedrill.draw();\n                    this.score.drawScore()\n\n                    this.SquirtleBulletShooter.bullets.forEach((bullet) => {\n                        bullet.draw();\n                        this.SquirtleBulletShooter.collisionDetection();\n                        this.SquirtleBulletShooter.bullets = this.SquirtleBulletShooter.bullets.filter(bullet => bullet.y > 0);\n                        this.SquirtleBulletShooter.bullets = this.SquirtleBulletShooter.bullets.filter(bullet =>  bullet.health > 0);\n                    });\n            \n                    setInterval(this.EnemyBulletShooter.shooterCheck(), 2000);\n                    this.EnemyBulletShooter.bullets.forEach((bullet) => {\n                        bullet.draw();\n                      \n                        \n                        this.EnemyBulletShooter.collisionDetection();\n                        this.EnemyBulletShooter.bullets = this.EnemyBulletShooter.bullets.filter(bullet => bullet.y < 540)\n                    });\n                }\n            }\n    \n     \n        }\n      \n    }\n\n\n    begin(){\n\n        this.menuDraw();\n        // this.Squirtle.draw();\n        // this.Butterfree.draw();\n        // this.Beedrill.draw();\n        // this.STATUS = 0;\n        this.life();\n    }\n\n    menuDraw() {\n        this.ctx.rect(0, 0, this.canvas.width, this.canvas.height);\n        this.ctx.fill();\n        // this.ctx.font = \"40px Arial\";\n        // this.ctx.textAlign = \"center\";\n        // this.ctx.fillText(\"Press Enter to begin\", this.canvas.width / 2, 100);\n        // this.ctx.fillText(\"Press Z to shoot\", this.canvas.width / 2, 150);\n        // this.ctx.fillText(\"You have 3 bullets at a time\", this.canvas.width / 2, 200);\n        // this.ctx.fillText(\"Press left and right to move\", this.canvas.width / 2, 250);\n        // this.ctx.fillText(\"Press P to pause\", this.canvas.width / 2, 300);\n        // this.ctx.fillText(\"Press M to mute\", this.canvas.width / 2, 350);\n        \n        // let press_m = new Image();\n        let press_enter = new Image();\n        let lives_photo = new Image();\n        press_enter .onload = () => {\n            this.ctx.fillStyle = \"steelblue\";\n            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n            this.ctx.drawImage(press_enter, 0, 0, this.canvas.width, 100);\n            this.ctx.drawImage(lives_photo, 0, 100, this.canvas.width, 150);\n            this.ctx.fillStyle = \"gold\";\n        }\n        press_enter.src = './assets/press-enter.png';\n        lives_photo.src = './assets/3-lives.png';\n    }\n    fainted(){\n        \n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        this.ctx.drawImage(this.gameOverPhoto, 0, 0, 500, 200)\n        this.ctx.font = \"40px Arial\";\n        this.ctx.fillStyle = \"steelblue\";\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\"Press H to heal\", this.canvas.width / 2, 250);\n    }\n\n    drawWin(){\n        // const image = new Image()\n\n        // image.src = './assets/deal-with-it.jpg';\n\n\n        let img = new Image();\n\n        img.onload = () => {\n            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n            this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height);\n            this.ctx.font = \"40px Arial\";\n            this.ctx.fillStyle = \"white\";\n            this.ctx.textAlign = \"center\";\n          \n            this.ctx.fillText(\"Press R to run it back\", this.canvas.width / 2, 200);\n\n        }\n        img.src = './assets/deal-with-it.jpg';\n    }\n\n\n    \n}\nexport default Game;\n","\nclass Score {\n    constructor(canvas, ctx, Squirtle){\n        this.canvas = canvas;\n        this.ctx = ctx;\n        this.score = 0;\n        this.Squirtle = Squirtle;\n        this.drawScore = this.drawScore.bind(this);\n    }\n//     resetGame(){\n//         this.score = 0;\n//     }\n//     addPoints(points){\n//         this.score += points;\n//     }\n     drawScore() {\n         this.ctx.fillStyle = \"rgba(0, 0, 0, 0)\";\n         this.ctx.rect(0, 0, this.canvas.width, this.canvas.height);\n         this.ctx.fill();\n         this.ctx.font = \"20px Arial\";\n         this.ctx.fillStyle = \"skyblue\";\n         this.ctx.textAlign = \"top\";\n         this.ctx.fillText(`Lives: ${this.Squirtle.health}`, this.canvas.width - 100, 15);\n         this.ctx.fillText(`Score: ${this.Squirtle.score}`, 100, 15);\n\n     }\n}\nexport default Score;","class Squirtle{\n    constructor(canvas, ctx, squirtlePhoto){\n        this.squirtleWidth = 24;\n        this.squirtlePhoto = squirtlePhoto;\n        this.squirtleHeight = 31;\n        this.canvas = canvas;\n        this.squirtleX = (this.canvas.width - this.squirtleWidth) / 2;\n        this.rightPressed = false;\n        this.leftPressed = false;\n        this.ctx = ctx;\n        this.zPressed = false;\n        this.mutePressed = false;\n        this.squirtleSpeed = 3;\n        this.health = 3;\n        this.keyDownHandler = this.keyDownHandler.bind(this);\n        this.keyUpHandler = this.keyUpHandler.bind(this);\n        this.drawSquirtle = this.drawSquirtle.bind(this);\n        this.handleMute = this.handleMute.bind(this);\n        this.draw = this.draw.bind(this);\n        this.paused = false;\n        this.score = 0;\n    }\n\n\n    keyDownHandler(e) {\n        if (e.keyCode === 39) {   \n            this.rightPressed = true;\n        } else if (e.keyCode === 37) {\n            this.leftPressed = true;\n        } else if (e.keyCode === 90){\n            this.zPressed = true;\n        } \n    }\n\n    handleMute(e){\n  \n        if(e.keyCode === 109) {\n            this.mutePressed = !this.mutePressed;\n        }\n        // } else if(e.keyCode == 112){\n        //     this.paused = !this.paused;\n        // }\n    }\n\n    \n\n    \n    keyUpHandler(e) {\n        if (e.keyCode === 39) {\n\n            this.rightPressed = false;\n        }\n        else if (e.keyCode === 37) {\n\n            this.leftPressed = false;\n        } else if (e.keyCode === 90) {\n            this.zPressed = false;\n        } \n\n       \n    }\n\n    \n\n    drawSquirtle() {\n        this.ctx.drawImage(this.squirtlePhoto, 10, 10, 37, 37, this.squirtleX, this.canvas.height - 50, 50, 50);\n        this.ctx.rect(this.squirtleX, this.canvas.height - this.squirtleHeight, this.squirtleHeight, this.squirtleWidth);\n    }\n\n    draw() {\n        this.drawSquirtle();\n        if (this.rightPressed && this.squirtleX < this.canvas.width - this.squirtleWidth) {\n            this.squirtleX += this.squirtleSpeed;\n        } else if (this.leftPressed && this.squirtleX > 0) {\n            this.squirtleX -= this.squirtleSpeed;\n        }\n    }\n    \n}\nexport default Squirtle;\n","import Squirtle from './squirtle';\n\nclass SquirtleBullet{\n    constructor(canvas, ctx, Squirtle){\n        this.Squirtle = Squirtle;\n        this.sBulletWidth = 3;\n        this.sBulletHeight = 25;\n        this.canvas = canvas;\n        this.ctx = ctx;\n        this.health = 1;\n        this.draw = this.draw.bind(this);\n        this.drawSquirtleBullet = this.drawSquirtleBullet.bind(this);\n        this.x = this.Squirtle.squirtleX;\n        this.y = 480;\n        this.speed = 3;\n    }\n\n    drawSquirtleBullet(){\n        this.ctx.beginPath();\n        this.ctx.rect(this.x + 15, this.y, this.sBulletWidth, this.sBulletHeight);\n        this.ctx.fillStyle = \"blue\";\n        this.ctx.fill();\n        this.ctx.closePath();\n    }\n\n    draw(){\n        // debugger\n        if(this.health > 0){\n            this.drawSquirtleBullet();\n            this.y -= this.speed;\n        }\n       \n    }\n\n\n}\n\nexport default SquirtleBullet;","import SquirtleBullet from './squirtleBullet';\n\nclass SquirtleBulletShooter{\n    constructor(ctx, canvas, Squirtle, Butterfrees, Beedrills, musicObject){\n\n        this.Beedrills = Beedrills\n        this.musicObject = musicObject;\n        this.Butterfrees = Butterfrees;\n        this.Squirtle = Squirtle;\n        this.canvas = canvas;\n        this.ctx = ctx;\n        this.keyDownHandler = this.keyDownHandler.bind(this);\n        this.collisionDetection = this.collisionDetection.bind(this);\n        this.bullets = [];\n    }\n\n    keyDownHandler(e){\n        // debugger\n        if (e.keyCode === 90 && this.bullets.length < 3) {\n            if(this.Squirtle.mutePressed){\n                this.musicObject.watergun.pause();\n            } else {\n                this.musicObject.watergun.play();\n            }\n            // debugger\n          \n                // setTimeout(() => this.bullets.push(new SquirtleBullet(this.canvas, this.ctx, this.Squirtle)), 500)\n            this.bullets.push(new SquirtleBullet(this.canvas, this.ctx, this.Squirtle))\n            \n        }\n    }\n\n    collisionDetection(){\n        // debugger\n        if(this.bullets.length > 0){\n            this.bullets.forEach((bullet) => {\n                if(bullet.health > 0){\n                    for(let i = 0; i < 6; i++){\n                        for(let j = 0; j < 2; j++){\n                            if (this.Butterfrees.butterfrees[i][j].health > 0){\n                                let butterfree = this.Butterfrees.butterfrees[i][j];\n                                if (bullet.x > butterfree.x - 25 && bullet.x < butterfree.x + 35 && bullet.y > butterfree.y - 15 && bullet.y < butterfree.y + 15){\n                                    butterfree.health -= 1;\n                                    bullet.health -= 1;\n                                    this.Squirtle.score += 25;\n                                }\n                            }\n                        }\n                    }\n\n                    for(let k = 0; k < 5; k++){\n                        for(let l = 0; l < 2; l++){\n                            if (this.Beedrills.beedrills[k][l].health > 0){\n                                let beedrill = this.Beedrills.beedrills[k][l];\n                                if (bullet.x > beedrill.x - 25 && bullet.x < beedrill.x + 15 && bullet.y > beedrill.y - 15 && bullet.y < beedrill.y + 15) {\n                                    beedrill.health -= 1;\n                                    bullet.health -= 1;\n                                    this.Squirtle.score += 25;\n                                }\n                            }\n\n                        }\n                    }\n\n                    \n                                \n\n                        \n                    \n\n                }\n            })\n        }\n    }\n}\n\nexport default SquirtleBulletShooter;","import Game from '../js/game';\nimport SquirtleBullet from '../js/squirtleBullet';\n\nimport Dragonite from '../js/dragonite';\nimport Butterfree from '../js/butterfree';\nimport Beedrill from '../js/beedrill';\nimport EnemyBullet from '../js/enemyBullet';\nimport Squirtle from '../js/squirtle';\nimport SquirtleBulletShooter from '../js/squirtleBulletShooter';\n\nimport EnemyBulletShooter from '../js/enemyBulletShooter';\nimport Score from '../js/score';\ndocument.addEventListener('DOMContentLoaded', () => {\n    const squirtlePhoto = new Image();\n    squirtlePhoto.src = './assets/squirtle.png';\n    const beedrillPhoto = new Image();\n    beedrillPhoto.src = './assets/beedrill.png';\n    \n    const butterfreePhoto = new Image();\n    butterfreePhoto.src = './assets/butterfree.png';\n    // const dragonitePhoto = new Image();\n    // dragonitePhoto.src = './assets/dragonite.png';\n    const gameOverPhoto = new Image();\n    gameOverPhoto.src = './assets/squirtle-fainted.png';\n    const dealWithItPhoto = new Image();\n    dealWithItPhoto.src = './assets/deal-with-it.jpg';\n    const music = document.createElement(\"audio\");\n    music.src = \"./assets/battle-music.MP3\";\n    const victory = document.createElement(\"audio\");\n    victory.src = './assets/victory.mp3';\n    const heal = document.createElement(\"audio\");\n    heal.src = './assets/heal-squirtle.mp3';\n    const canvas = document.querySelector('canvas');\n    const ctx = canvas.getContext('2d');\n    const watergun = document.createElement(\"audio\");\n    watergun.src = './assets/WaterGun.mp3';\n    const hit = document.createElement(\"audio\");\n    hit.src = './assets/SelfDestruct.mp3';\n    const musicObject = {\n        music: music,\n        victory: victory,\n        heal: heal,\n        watergun: watergun,\n        hit: hit\n    }\n    const game = new Game(canvas, ctx, Squirtle, squirtlePhoto, Butterfree, butterfreePhoto, Beedrill, beedrillPhoto, SquirtleBulletShooter, EnemyBulletShooter, gameOverPhoto, dealWithItPhoto, musicObject, Score)\n    // debugger\n    game.begin()\n})"],"sourceRoot":""}